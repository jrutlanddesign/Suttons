/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
  font-size: 62.5%;
  background-color: #F2F2F2;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*, *::before, *::after {
  box-sizing: inherit;
}

/**
 * Basic styles for links
 */
a {
  color: #214fa1;
  text-decoration: none;
}

a:hover, a:active, a:focus {
  color: #949494;
  text-decoration: underline;
}

/**
 * Basic typography style for copy text
 */
body {
  color: #949494;
  font: normal 125%/1.4 "Open Sans", "Helvetica Neue Light", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: 1.4rem;
  font-size: 14px;
  line-height: 25px;
}

h1 {
  font-weight: 700;
  font-size: 2.5rem;
  font-size: 25px;
}

h1:after {
  display: block;
  width: 50px;
  height: 4px;
  background-color: #214fa1;
  border-radius: 5px;
  content: '';
  margin-top: 20px;
}

.boldItalic {
  font-weight: 700;
  font-style: italic;
}

@media screen and (min-width: 1024px) {
  h1 {
    font-weight: 700;
    font-size: 3.5rem;
    font-size: 35px;
    width: 65%;
    margin: 0 auto;
    padding: 50px 0;
    line-height: 45px;
  }
}

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  max-width: 2880px;
  /* 1 */
  margin-left: auto;
  /* 2 */
  margin-right: auto;
  /* 2 */
  width: 100%;
  /* 1 */
  background-color: #FFFFFF;
}

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

header {
  background-color: #FFFFFF;
  position: relative;
  z-index: 5;
  height: 95px;
}

.logo {
  margin: 10px 0 10px 10px;
  height: 60px;
}

#topContact {
  background-color: #97c400;
  color: #FFFFFF;
  padding: 15px 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-weight: 700;
  height: 70px;
  position: relative;
}

#topContact img {
  margin-right: 20px;
}

#topContact span {
  font-size: 2.5rem;
  font-size: 25px;
}

#heroSlider img {
  width: 100%;
  margin-top: 50px;
}

@media screen and (min-width: 1024px) {
  header {
    height: 80px;
  }
  .logo {
    height: 115px;
  }
  #topContact {
    width: 30%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    top: 0;
    position: absolute;
    right: 0;
    height: 100%;
  }
  #heroSlider img {
    width: 100%;
    margin-top: 0;
  }
}

#warning {
  background-color: #214fa1;
  color: #FFFFFF;
  text-align: left;
  font-weight: 700;
  font-size: 1.4rem;
  font-size: 14px;
  text-transform: uppercase;
  position: relative;
  padding: 30px calc(5% + 20px);
}

#warning::before {
  content: '';
  background: url("../images/warning.svg") center #FBC120 no-repeat;
  background-size: 60%;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  position: absolute;
  top: -20px;
  left: 5%;
  display: block;
  border: solid 3px #FFFFFF;
}

footer {
  position: relative;
  background-color: #F2F2F2;
}

footer .twentyFive {
  width: 100%;
  position: relative;
  background-color: #D8D8D8;
  padding: 90px 0 20px;
}

footer .twentyFive address, footer .twentyFive b {
  padding: 0 5%;
}

footer .seventyFive {
  padding: 20px 5%;
}

footer .lower {
  padding: 20px 0;
  margin: 10px auto;
  border-top: solid 1px #D8D8D8;
  width: 90%;
  text-align: center;
}

footer #social {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background-color: #F2F2F2;
  top: 0;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  width: 100%;
  padding-top: 20px;
  padding-bottom: 20px;
}

footer #social img {
  height: 30px;
}

@media screen and (min-width: 1024px) {
  #warning {
    text-align: center;
  }
  #warning::before {
    margin: 0 auto;
    left: 0;
    right: 0;
  }
  footer {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    padding: 30px 5%;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    font-size: 1.2rem;
    font-size: 12px;
    line-height: 16px;
  }
  footer .twentyFive {
    width: 25%;
    background-color: #F2F2F2;
    padding: 20px 0;
  }
  footer .twentyFive #social {
    position: relative;
  }
  footer .twentyFive #social img {
    height: 45px;
  }
  footer .seventyFive {
    width: 75%;
  }
  footer .seventyFive p:first-of-type {
    margin-top: 0;
  }
  footer .lower {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
  footer .lower .copyright {
    width: 50%;
    text-align: left;
    display: inline-block;
    vertical-align: top;
  }
  footer .lower .designBy {
    width: 50%;
    text-align: right;
    display: inline-block;
    vertical-align: top;
  }
}

nav {
  top: -600px;
  position: absolute;
  -webkit-transition: top ease-in .4s;
  transition: top ease-in .4s;
  background-color: #214fa1;
  color: #FFFFFF;
  width: 100%;
  z-index: 1;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
}

nav.open {
  top: 155px;
}

nav.dropHead {
  top: 0;
  position: fixed;
}

nav.dropHead ul > a li {
  display: inline-block;
  width: 49.5%;
  border-bottom: solid 1px rgba(255, 255, 255, 0.4);
}

nav.dropHead ul:nth-child(odd) > a li {
  border-right: solid 1px rgba(255, 255, 255, 0.4);
}

nav ul {
  padding: 0;
  margin: 0;
}

nav ul a {
  color: #FFFFFF;
  text-decoration: none;
}

nav ul li {
  list-style: none;
  padding: 15px;
  border-bottom: solid 1px #183a77;
}

nav ul li:last-child {
  border-bottom: none;
}

#menuIcon {
  position: absolute;
  top: 20px;
  right: 20px;
}

@media screen and (min-width: 1024px) {
  nav {
    position: relative;
    top: 0;
    background-color: #FFFFFF;
    border-bottom: solid 3px #214fa1;
    -webkit-transition: all 0.4s ease;
    transition: all 0.4s ease;
  }
  nav.dropHead {
    display: none;
  }
  nav ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }
  nav ul a {
    color: #949494;
    text-decoration: none;
    border-bottom: solid 3px #FFFFFF;
  }
  nav ul a:hover {
    color: #97c400;
    border-bottom: solid 3px #214fa1;
    text-decoration: none;
    cursor: pointer;
  }
  #menuIcon {
    display: none;
  }
}

.titleContain, article {
  padding: 0 10% 0;
}

#services .icon {
  width: 100%;
  background-color: #97c400;
  color: #FFFFFF;
  margin: 0;
  padding: 0;
  padding: 30px;
  border-bottom: solid 1px #ceff2b;
}

#services .icon img {
  margin-right: 25px;
  width: 50px;
  display: inline-block;
  vertical-align: middle;
}

#services .icon h2 {
  display: inline-block;
  vertical-align: middle;
  width: calc(100% - 125px);
}

@media screen and (min-width: 720px) {
  #heroSlider {
    max-height: 500px;
    overflow-y: hidden;
  }
  #services {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  #services .icon {
    width: 50%;
    display: inline-block;
    padding: 50px 10%;
  }
  #services .icon img {
    width: 65px;
    margin-right: 45px;
  }
  #services .icon:nth-child(odd) {
    border-right: solid 1px #ceff2b;
  }
  article {
    width: 65%;
    margin: 70px auto;
  }
}

form label {
  font-weight: 700;
  font-size: 1rem;
  font-size: 10px;
  margin-top: 35px;
  display: block;
  color: #214fa1;
}

form input[type="text"],
form input[type="number"],
form input[type="email"],
form textarea {
  width: 100%;
  padding: 25px;
  background-color: #FFFFFF;
  border: solid 1px #D8D8D8;
  color: #D8D8D8;
}

form input[type="text"]:focus,
form input[type="number"]:focus,
form input[type="email"]:focus,
form textarea:focus {
  color: #214fa1;
  font-weight: 700;
  background-color: #F2F2F2;
  border-color: #97c400;
  outline: none;
}

form input[type="submit"] {
  background-color: #97c400;
  color: #FFFFFF;
  padding: 15px 55px;
  border: none;
}

form input[type="submit"]:hover {
  background-color: #83ab00;
}

form input[type="submit"]:active {
  background-color: #709100;
  outline: none;
}

/*# sourceMappingURL=data:application/json;base64, */
